package ter0minator.alchemyegg;

import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.projectile.EntityThrowable;
import net.minecraft.init.SoundEvents;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.EnumParticleTypes;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundCategory;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.world.World;
import net.minecraft.world.WorldServer;
import net.minecraftforge.fml.common.registry.ForgeRegistries;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
public class EntityTransmutedEgg extends EntityThrowable {
    // Required empty constructor
    public EntityTransmutedEgg(World world) {
        super(world);
    }
    
    // Thrower constructor
    public EntityTransmutedEgg(World world, EntityLivingBase thrower) {
        super(world, thrower);
    }
    
    // Position constructor (not required but good to have)
    public EntityTransmutedEgg(World world, double x, double y, double z) {
        super(world, x, y, z);
    }

    @Override
    public void onUpdate() {
        super.onUpdate();
        // Create particle trail
        if(world.isRemote) {
            world.spawnParticle(EnumParticleTypes.REDSTONE, 
                posX, posY, posZ, 
                0, 0.5, 0);
        }
    }

    @Override
    protected void onImpact(RayTraceResult result) {
        if (!this.world.isRemote) {
            // 1. Play explosion sound
            world.playSound(null, this.posX, this.posY, this.posZ,
                SoundEvents.ENTITY_GENERIC_EXPLODE, SoundCategory.BLOCKS,
                0.5F, (1.0F + (world.rand.nextFloat() - world.rand.nextFloat()) * 0.2F) * 0.7F);

            // 2. Spawn explosion particles on client
            if (world instanceof WorldServer) {
                ((WorldServer)world).spawnParticle(EnumParticleTypes.EXPLOSION_LARGE,
                    this.posX, this.posY, this.posZ,
                    20,
                    0.5D, 0.5D, 0.5D,
                    0.1D
                );
            }

            // 3. Drop random item
            Item randomItem = getRandomItem();
            if (randomItem != null) {
                ItemStack stack = new ItemStack(randomItem);
                entityDropItem(stack, 0.0F);
            }

            this.setDead();
        }
    }

	private Item getRandomItem() {
		// TODO Auto-generated method stub
		return null;
	}
}