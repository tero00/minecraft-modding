package ter0minator.alchemyegg;

import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.projectile.EntityThrowable;
import net.minecraft.init.SoundEvents;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundCategory;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.world.World;
import net.minecraftforge.fml.common.registry.ForgeRegistries;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class EntityTransmutedEgg extends EntityThrowable {

    private static final Random RANDOM = new Random();
    public EntityTransmutedEgg(World world) {
        super(world);
        System.out.println("ENTITY CREATED IN WORLD: " + world.isRemote); // Debug line
    }

    public EntityTransmutedEgg(World world, EntityLivingBase thrower) {
        super(world, thrower);
        System.out.println("ENTITY CREATED WITH THROWER: " + thrower.getName()); // Debug line
    }
    @Override
    protected void onImpact(RayTraceResult result) {
        if (!this.world.isRemote) {
            // Spawn a random item at the impact location
            Item randomItem = getRandomItem();
            if (randomItem != null) {
                ItemStack randomItemStack = new ItemStack(randomItem, 1);
                entityDropItem(randomItemStack, 0.0F);
            }
            this.world.playSound(null, this.posX, this.posY, this.posZ, SoundEvents.BLOCK_STONE_HIT, SoundCategory.NEUTRAL, 0.5F, 0.4F / (this.rand.nextFloat() * 0.4F + 0.8F));
            this.setDead(); 
        }
    }

    private static Item getRandomItem() {
        List<Item> items = new ArrayList<>();
        for (ResourceLocation key : ForgeRegistries.ITEMS.getKeys()) {
            items.add(ForgeRegistries.ITEMS.getValue(key));
        }
        if (!items.isEmpty()) {
            return items.get(RANDOM.nextInt(items.size()));
        }
        return null;
    }
}